apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: dev-pipeline
spec:
  workspaces:
  - name: shared-workspace
  params:
  - name: deployment-name
    type: string
    description: name of the deployment to be patched
  - name: git-url
    type: string
    description: url of the git repo for the code of deployment
  - name: git-revision
    type: string
    description: revision to be used from repo of the code for deployment
    default: "master"
  - name: IMAGE
    type: string
    description: image to be build from the code
  tasks:
  - name: fetch-repository
    params:
      - name: url
        value: $(params.git-url)
      - name: deleteExisting
        value: 'true'
      - name: revision
        value: $(params.git-revision)
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
      - name: output
        workspace: shared-workspace
  - name: build-image
    params:
      - name: IMAGE
        value: $(params.IMAGE)
    runAfter:
      - fetch-repository
    taskRef:
      kind: ClusterTask
      name: buildah
    workspaces:
      - name: source
        workspace: shared-workspace
  - name: apply-manifests
    params:
      - name: project-name
        value: dev-env
    runAfter:
      - build-image
    taskRef:
      kind: Task
      name: apply-manifests
    workspaces:
      - name: source
        workspace: shared-workspace
  - name: update-deployment
    params:
      - name: deployment
        value: $(params.deployment-name)
      - name: IMAGE
        value: $(params.IMAGE)
      - name: project-name
        value: dev-env
    runAfter:
      - apply-manifests
    taskRef:
      kind: Task
      name: update-deployment
  - name: test-task
    params:
      - name: APP_NAME
        value: $(params.deployment-name)
      - name: APP_VERSION
        value: '1.0'
      - name: DEPLOY_PROJECT
        value: dev-env
    runAfter:
      - update-deployment
    taskRef:
      kind: Task
      name: test-app
    workspaces:
      - name: source
        workspace: shared-workspace
  - name: execute-remote-pipeline
    params:
    - name: APP_NAME
      value: $(params.deployment-name)
    - name: url
      value: $(params.git-url)
    - name: pipeline-name
      value: prod-pipeline
    - name: pipeline-namespace
      value: prod-env
    - name: openshift-server-url
      value: INSERT_OPENSHIFT_URL_HERE
    - name: openshift-token-secret
      value: pipeline-starter
    taskRef:
      kind: Task
      name: execute-remote-pipeline
    runAfter:
      - test-task
